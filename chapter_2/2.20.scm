(define (append-element elements elem)
  (append elements (list elem))) 
(define (same-parity a . m)
  (define (parity? a b)
    (let ((a-par (remainder a 2))
          (b-par (remainder b 2)))
      (= a-par b-par)))
  (define (append-parity result-list arguments)
    (if (null? arguments)
        result-list
        (if (parity? (car result-list) (car arguments))
            (append-parity (append-element result-list (car arguments)) (cdr arguments))
            (append-parity result-list (cdr arguments)))))
  (append-parity (list a) m))
(same-parity 2 3 4 5 6 7)